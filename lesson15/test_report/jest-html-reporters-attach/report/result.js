window.jest_html_reporters_callback__({"numFailedTestSuites":1,"numFailedTests":6,"numPassedTestSuites":0,"numPassedTests":15,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":1,"numTotalTests":21,"startTime":1657401571381,"success":false,"testResults":[{"leaks":false,"numFailingTests":6,"numPassingTests":15,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1657401574609,"runtime":2245,"slow":false,"start":1657401572364},"skipped":false,"testFilePath":"E:\\kurs\\it academy\\it_academy\\lesson15\\test.js","testResults":[{"ancestorTitles":["Calculator"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Calculator adds 1 + 2 to equal 3","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"adds 1 + 2 to equal 3"},{"ancestorTitles":["Calculator"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Calculator adds 0 + 5 to equal 5","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"adds 0 + 5 to equal 5"},{"ancestorTitles":["Calculator"],"duration":5,"failureDetails":[{"matcherResult":{"actual":"string","expected":"number","message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"number\"\u001b[39m\nReceived: \u001b[31m\"string\"\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"number\"\u001b[39m\nReceived: \u001b[31m\"string\"\u001b[39m\n    at Object.toBe (E:\\kurs\\it academy\\it_academy\\lesson15\\test.js:13:49)\n    at Promise.then.completed (E:\\kurs\\it academy\\it_academy\\lesson15\\node_modules\\jest-circus\\build\\utils.js:333:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (E:\\kurs\\it academy\\it_academy\\lesson15\\node_modules\\jest-circus\\build\\utils.js:259:10)\n    at _callCircusTest (E:\\kurs\\it academy\\it_academy\\lesson15\\node_modules\\jest-circus\\build\\run.js:277:40)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at _runTest (E:\\kurs\\it academy\\it_academy\\lesson15\\node_modules\\jest-circus\\build\\run.js:209:3)\n    at _runTestsForDescribeBlock (E:\\kurs\\it academy\\it_academy\\lesson15\\node_modules\\jest-circus\\build\\run.js:97:9)\n    at _runTestsForDescribeBlock (E:\\kurs\\it academy\\it_academy\\lesson15\\node_modules\\jest-circus\\build\\run.js:91:9)\n    at run (E:\\kurs\\it academy\\it_academy\\lesson15\\node_modules\\jest-circus\\build\\run.js:31:3)"],"fullName":"Calculator adds strings to add() ","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"adds strings to add() "},{"ancestorTitles":["Calculator"],"duration":1,"failureDetails":[{"matcherResult":{"actual":"string","message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m[Function Error]\u001b[39m\nReceived: \u001b[31m\"string\"\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m[Function Error]\u001b[39m\nReceived: \u001b[31m\"string\"\u001b[39m\n    at Object.toBe (E:\\kurs\\it academy\\it_academy\\lesson15\\test.js:16:57)\n    at Promise.then.completed (E:\\kurs\\it academy\\it_academy\\lesson15\\node_modules\\jest-circus\\build\\utils.js:333:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (E:\\kurs\\it academy\\it_academy\\lesson15\\node_modules\\jest-circus\\build\\utils.js:259:10)\n    at _callCircusTest (E:\\kurs\\it academy\\it_academy\\lesson15\\node_modules\\jest-circus\\build\\run.js:277:40)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at _runTest (E:\\kurs\\it academy\\it_academy\\lesson15\\node_modules\\jest-circus\\build\\run.js:209:3)\n    at _runTestsForDescribeBlock (E:\\kurs\\it academy\\it_academy\\lesson15\\node_modules\\jest-circus\\build\\run.js:97:9)\n    at _runTestsForDescribeBlock (E:\\kurs\\it academy\\it_academy\\lesson15\\node_modules\\jest-circus\\build\\run.js:91:9)\n    at run (E:\\kurs\\it academy\\it_academy\\lesson15\\node_modules\\jest-circus\\build\\run.js:31:3)"],"fullName":"Calculator adds strings to add() ","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"adds strings to add() "},{"ancestorTitles":["Calculator"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Calculator multiply 1 * 2 to equal 2","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"multiply 1 * 2 to equal 2"},{"ancestorTitles":["Calculator"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Calculator multiply 0 * 2 to equal 0","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"multiply 0 * 2 to equal 0"},{"ancestorTitles":["Calculator"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Calculator multiply strings to equal number","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"multiply strings to equal number"},{"ancestorTitles":["Calculator"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Calculator multiply 1 * 2 to equal 2","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"multiply 1 * 2 to equal 2"},{"ancestorTitles":["Calculator"],"duration":1,"failureDetails":[{"matcherResult":{"actual":null,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m[Function Error]\u001b[39m\nReceived: \u001b[31mNaN\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m[Function Error]\u001b[39m\nReceived: \u001b[31mNaN\u001b[39m\n    at Object.toBe (E:\\kurs\\it academy\\it_academy\\lesson15\\test.js:33:51)\n    at Promise.then.completed (E:\\kurs\\it academy\\it_academy\\lesson15\\node_modules\\jest-circus\\build\\utils.js:333:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (E:\\kurs\\it academy\\it_academy\\lesson15\\node_modules\\jest-circus\\build\\utils.js:259:10)\n    at _callCircusTest (E:\\kurs\\it academy\\it_academy\\lesson15\\node_modules\\jest-circus\\build\\run.js:277:40)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at _runTest (E:\\kurs\\it academy\\it_academy\\lesson15\\node_modules\\jest-circus\\build\\run.js:209:3)\n    at _runTestsForDescribeBlock (E:\\kurs\\it academy\\it_academy\\lesson15\\node_modules\\jest-circus\\build\\run.js:97:9)\n    at _runTestsForDescribeBlock (E:\\kurs\\it academy\\it_academy\\lesson15\\node_modules\\jest-circus\\build\\run.js:91:9)\n    at run (E:\\kurs\\it academy\\it_academy\\lesson15\\node_modules\\jest-circus\\build\\run.js:31:3)"],"fullName":"Calculator multiply strings","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"multiply strings"},{"ancestorTitles":["Calculator"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Calculator subtraction two number","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"subtraction two number"},{"ancestorTitles":["Calculator"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Calculator subtraction -5 and 3 equal -8","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"subtraction -5 and 3 equal -8"},{"ancestorTitles":["Calculator"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Calculator subtraction two string with numner","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"subtraction two string with numner"},{"ancestorTitles":["Calculator"],"duration":0,"failureDetails":[{"matcherResult":{"actual":null,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m[Function Error]\u001b[39m\nReceived: \u001b[31mNaN\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m[Function Error]\u001b[39m\nReceived: \u001b[31mNaN\u001b[39m\n    at Object.toBe (E:\\kurs\\it academy\\it_academy\\lesson15\\test.js:47:54)\n    at Promise.then.completed (E:\\kurs\\it academy\\it_academy\\lesson15\\node_modules\\jest-circus\\build\\utils.js:333:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (E:\\kurs\\it academy\\it_academy\\lesson15\\node_modules\\jest-circus\\build\\utils.js:259:10)\n    at _callCircusTest (E:\\kurs\\it academy\\it_academy\\lesson15\\node_modules\\jest-circus\\build\\run.js:277:40)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at _runTest (E:\\kurs\\it academy\\it_academy\\lesson15\\node_modules\\jest-circus\\build\\run.js:209:3)\n    at _runTestsForDescribeBlock (E:\\kurs\\it academy\\it_academy\\lesson15\\node_modules\\jest-circus\\build\\run.js:97:9)\n    at _runTestsForDescribeBlock (E:\\kurs\\it academy\\it_academy\\lesson15\\node_modules\\jest-circus\\build\\run.js:91:9)\n    at run (E:\\kurs\\it academy\\it_academy\\lesson15\\node_modules\\jest-circus\\build\\run.js:31:3)"],"fullName":"Calculator subtraction two string","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"subtraction two string"},{"ancestorTitles":["Calculator"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Calculator divide 6 and 2 equal 3","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"divide 6 and 2 equal 3"},{"ancestorTitles":["Calculator"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Calculator divide '6' and '2' equal 3","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"divide '6' and '2' equal 3"},{"ancestorTitles":["Calculator"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Calculator divide -6 and 2 equal -3","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"divide -6 and 2 equal -3"},{"ancestorTitles":["Calculator"],"duration":0,"failureDetails":[{"matcherResult":{"actual":null,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m[Function Error]\u001b[39m\nReceived: \u001b[31mNaN\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m[Function Error]\u001b[39m\nReceived: \u001b[31mNaN\u001b[39m\n    at Object.toBe (E:\\kurs\\it academy\\it_academy\\lesson15\\test.js:60:54)\n    at Promise.then.completed (E:\\kurs\\it academy\\it_academy\\lesson15\\node_modules\\jest-circus\\build\\utils.js:333:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (E:\\kurs\\it academy\\it_academy\\lesson15\\node_modules\\jest-circus\\build\\utils.js:259:10)\n    at _callCircusTest (E:\\kurs\\it academy\\it_academy\\lesson15\\node_modules\\jest-circus\\build\\run.js:277:40)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at _runTest (E:\\kurs\\it academy\\it_academy\\lesson15\\node_modules\\jest-circus\\build\\run.js:209:3)\n    at _runTestsForDescribeBlock (E:\\kurs\\it academy\\it_academy\\lesson15\\node_modules\\jest-circus\\build\\run.js:97:9)\n    at _runTestsForDescribeBlock (E:\\kurs\\it academy\\it_academy\\lesson15\\node_modules\\jest-circus\\build\\run.js:91:9)\n    at run (E:\\kurs\\it academy\\it_academy\\lesson15\\node_modules\\jest-circus\\build\\run.js:31:3)"],"fullName":"Calculator divide two string","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"divide two string"},{"ancestorTitles":["Calculator"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Calculator exponentiation 6 to equal 36","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"exponentiation 6 to equal 36"},{"ancestorTitles":["Calculator"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"Calculator exponentiation '6' equal 36","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"exponentiation '6' equal 36"},{"ancestorTitles":["Calculator"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Calculator exponentiation -6 equal 36","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"exponentiation -6 equal 36"},{"ancestorTitles":["Calculator"],"duration":0,"failureDetails":[{"matcherResult":{"actual":null,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m[Function Error]\u001b[39m\nReceived: \u001b[31mNaN\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m[Function Error]\u001b[39m\nReceived: \u001b[31mNaN\u001b[39m\n    at Object.toBe (E:\\kurs\\it academy\\it_academy\\lesson15\\test.js:74:57)\n    at Promise.then.completed (E:\\kurs\\it academy\\it_academy\\lesson15\\node_modules\\jest-circus\\build\\utils.js:333:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (E:\\kurs\\it academy\\it_academy\\lesson15\\node_modules\\jest-circus\\build\\utils.js:259:10)\n    at _callCircusTest (E:\\kurs\\it academy\\it_academy\\lesson15\\node_modules\\jest-circus\\build\\run.js:277:40)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at _runTest (E:\\kurs\\it academy\\it_academy\\lesson15\\node_modules\\jest-circus\\build\\run.js:209:3)\n    at _runTestsForDescribeBlock (E:\\kurs\\it academy\\it_academy\\lesson15\\node_modules\\jest-circus\\build\\run.js:97:9)\n    at _runTestsForDescribeBlock (E:\\kurs\\it academy\\it_academy\\lesson15\\node_modules\\jest-circus\\build\\run.js:91:9)\n    at run (E:\\kurs\\it academy\\it_academy\\lesson15\\node_modules\\jest-circus\\build\\run.js:31:3)"],"fullName":"Calculator dexponentiation two string","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"dexponentiation two string"}],"failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mCalculator › adds strings to add() \u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"number\"\u001b[39m\n    Received: \u001b[31m\"string\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 11 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 12 |\u001b[39m     test(\u001b[32m'adds strings to add() '\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 13 |\u001b[39m         expect(\u001b[36mtypeof\u001b[39m calculator\u001b[33m.\u001b[39madd(\u001b[32m'0'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'5'\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[32m'number'\u001b[39m)\u001b[33m;\u001b[39m       \u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    |\u001b[39m                                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 14 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 15 |\u001b[39m     test(\u001b[32m'adds strings to add() '\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 16 |\u001b[39m         expect(\u001b[36mtypeof\u001b[39m calculator\u001b[33m.\u001b[39madd(\u001b[32m'Hello'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'World'\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[33mError\u001b[39m)\u001b[33m;\u001b[39m       \u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest.js\u001b[39m\u001b[0m\u001b[2m:13:49)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mCalculator › adds strings to add() \u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m[Function Error]\u001b[39m\n    Received: \u001b[31m\"string\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 14 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 15 |\u001b[39m     test(\u001b[32m'adds strings to add() '\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 16 |\u001b[39m         expect(\u001b[36mtypeof\u001b[39m calculator\u001b[33m.\u001b[39madd(\u001b[32m'Hello'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'World'\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[33mError\u001b[39m)\u001b[33m;\u001b[39m       \u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    |\u001b[39m                                                         \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 17 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 18 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 19 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest.js\u001b[39m\u001b[0m\u001b[2m:16:57)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mCalculator › multiply strings\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m[Function Error]\u001b[39m\n    Received: \u001b[31mNaN\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 31 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 32 |\u001b[39m     test(\u001b[32m'multiply strings'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 33 |\u001b[39m         expect(calculator\u001b[33m.\u001b[39mmultiply(\u001b[32m'Hello'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'2'\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[33mError\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    |\u001b[39m                                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 34 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 35 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 36 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest.js\u001b[39m\u001b[0m\u001b[2m:33:51)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mCalculator › subtraction two string\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m[Function Error]\u001b[39m\n    Received: \u001b[31mNaN\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 45 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 46 |\u001b[39m     test(\u001b[32m'subtraction two string'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m{                   \u001b[90m///\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 47 |\u001b[39m         expect(calculator\u001b[33m.\u001b[39msubtraction(\u001b[32m'Hello'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'o'\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[33mError\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    |\u001b[39m                                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 48 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 49 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 50 |\u001b[39m     test(\u001b[32m'divide 6 and 2 equal 3'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m{\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest.js\u001b[39m\u001b[0m\u001b[2m:47:54)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mCalculator › divide two string\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m[Function Error]\u001b[39m\n    Received: \u001b[31mNaN\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 58 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 59 |\u001b[39m     test(\u001b[32m'divide two string'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m{                   \u001b[90m///\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 60 |\u001b[39m         expect(calculator\u001b[33m.\u001b[39msubtraction(\u001b[32m'Hello'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'o'\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[33mError\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    |\u001b[39m                                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 61 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 62 |\u001b[39m     \u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 63 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest.js\u001b[39m\u001b[0m\u001b[2m:60:54)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mCalculator › dexponentiation two string\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m[Function Error]\u001b[39m\n    Received: \u001b[31mNaN\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 72 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 73 |\u001b[39m     test(\u001b[32m'dexponentiation two string'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m{                   \u001b[90m///\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 74 |\u001b[39m         expect(calculator\u001b[33m.\u001b[39mexponentiation(\u001b[32m'Hello'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'o'\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[33mError\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    |\u001b[39m                                                         \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 75 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 76 |\u001b[39m     \u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 77 |\u001b[39m })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest.js\u001b[39m\u001b[0m\u001b[2m:74:57)\u001b[22m\u001b[2m\u001b[22m\n","v8Coverage":[{"codeTransformResult":{"code":"/**\r\n *\r\n *A class containing method for summing and multiplying parameters.\r\n * @class Calculator\r\n */\nclass Calculator {\n  constructor() {}\n\n  /**\r\n   *\r\n   *\r\n   * @param {Array<Number>} theArgs array of numbers for summing\r\n   * @return {Number} sum of numbers\r\n   * @memberof Calculator\r\n   */\n  add(...theArgs) {\n    let result = 0;\n\n    for (let i = 0; i < theArgs.length; i++) {\n      result += theArgs[i];\n    }\n\n    return result;\n  }\n\n  /**\r\n   *\r\n   *\r\n   * @param {Array<Number>} theArgs array of numbers for multiplication\r\n   * @return {Number}\r\n   * @memberof Calculator\r\n   */\n  multiply(...theArgs) {\n    let result = 1;\n\n    for (let i = 0; i < theArgs.length; i++) {\n      result = result * theArgs[i];\n    }\n\n    return result;\n  }\n\n  subtraction(reduced, subtrahend) {\n    return reduced - subtrahend;\n  }\n\n  divide(dividend, divider) {\n    return dividend / divider;\n  }\n\n  exponentiation(number) {\n    return number * number;\n  }\n\n}\n\n;\nmodule.exports = {\n  Calculator\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJDYWxjdWxhdG9yIiwiY29uc3RydWN0b3IiLCJhZGQiLCJ0aGVBcmdzIiwicmVzdWx0IiwiaSIsImxlbmd0aCIsIm11bHRpcGx5Iiwic3VidHJhY3Rpb24iLCJyZWR1Y2VkIiwic3VidHJhaGVuZCIsImRpdmlkZSIsImRpdmlkZW5kIiwiZGl2aWRlciIsImV4cG9uZW50aWF0aW9uIiwibnVtYmVyIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbImNhbGN1bGF0b3IuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqXHJcbiAqQSBjbGFzcyBjb250YWluaW5nIG1ldGhvZCBmb3Igc3VtbWluZyBhbmQgbXVsdGlwbHlpbmcgcGFyYW1ldGVycy5cclxuICogQGNsYXNzIENhbGN1bGF0b3JcclxuICovXHJcbiBjbGFzcyBDYWxjdWxhdG9yIHtcclxuICAgIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgfTtcclxuICAgIC8qKlxyXG4gICAgICpcclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0ge0FycmF5PE51bWJlcj59IHRoZUFyZ3MgYXJyYXkgb2YgbnVtYmVycyBmb3Igc3VtbWluZ1xyXG4gICAgICogQHJldHVybiB7TnVtYmVyfSBzdW0gb2YgbnVtYmVyc1xyXG4gICAgICogQG1lbWJlcm9mIENhbGN1bGF0b3JcclxuICAgICAqL1xyXG4gICAgYWRkKC4uLnRoZUFyZ3MpIHtcclxuICAgICAgICBsZXQgcmVzdWx0ID0gMDtcclxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoZUFyZ3MubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgIHJlc3VsdCArPSB0aGVBcmdzW2ldO1xyXG4gICAgICAgIH1cclxuICBcclxuICAgICAgICByZXR1cm4gcmVzdWx0O1xyXG4gICAgfTtcclxuICAgIC8qKlxyXG4gICAgICpcclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0ge0FycmF5PE51bWJlcj59IHRoZUFyZ3MgYXJyYXkgb2YgbnVtYmVycyBmb3IgbXVsdGlwbGljYXRpb25cclxuICAgICAqIEByZXR1cm4ge051bWJlcn1cclxuICAgICAqIEBtZW1iZXJvZiBDYWxjdWxhdG9yXHJcbiAgICAgKi9cclxuICAgIG11bHRpcGx5KC4uLnRoZUFyZ3MpIHtcclxuICAgICAgICBsZXQgcmVzdWx0ID0gMTtcclxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoZUFyZ3MubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgIHJlc3VsdCA9IHJlc3VsdCAqIHRoZUFyZ3NbaV07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiByZXN1bHQ7XHJcbiAgICB9O1xyXG4gICAgXHJcbiAgICBzdWJ0cmFjdGlvbihyZWR1Y2VkLCBzdWJ0cmFoZW5kKSB7XHJcbiAgICAgICAgcmV0dXJuIHJlZHVjZWQgLSBzdWJ0cmFoZW5kO1xyXG4gICAgfVxyXG5cclxuICAgIGRpdmlkZShkaXZpZGVuZCwgZGl2aWRlcikge1xyXG4gICAgICAgIHJldHVybiBkaXZpZGVuZCAvIGRpdmlkZXI7XHJcbiAgICB9XHJcblxyXG4gICAgZXhwb25lbnRpYXRpb24obnVtYmVyKSB7XHJcbiAgICAgICAgcmV0dXJuIG51bWJlciAqIG51bWJlcjtcclxuICAgIH1cclxuICB9O1xyXG4gIFxyXG4gIG1vZHVsZS5leHBvcnRzID0ge0NhbGN1bGF0b3J9OyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNDLE1BQU1BLFVBQU4sQ0FBaUI7RUFDZEMsV0FBVyxHQUFHLENBQ2I7O0VBQ0Q7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7RUFDSUMsR0FBRyxDQUFDLEdBQUdDLE9BQUosRUFBYTtJQUNaLElBQUlDLE1BQU0sR0FBRyxDQUFiOztJQUNBLEtBQUssSUFBSUMsQ0FBQyxHQUFHLENBQWIsRUFBZ0JBLENBQUMsR0FBR0YsT0FBTyxDQUFDRyxNQUE1QixFQUFvQ0QsQ0FBQyxFQUFyQyxFQUF5QztNQUN2Q0QsTUFBTSxJQUFJRCxPQUFPLENBQUNFLENBQUQsQ0FBakI7SUFDRDs7SUFFRCxPQUFPRCxNQUFQO0VBQ0g7O0VBQ0Q7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7RUFDSUcsUUFBUSxDQUFDLEdBQUdKLE9BQUosRUFBYTtJQUNqQixJQUFJQyxNQUFNLEdBQUcsQ0FBYjs7SUFDQSxLQUFLLElBQUlDLENBQUMsR0FBRyxDQUFiLEVBQWdCQSxDQUFDLEdBQUdGLE9BQU8sQ0FBQ0csTUFBNUIsRUFBb0NELENBQUMsRUFBckMsRUFBeUM7TUFDdkNELE1BQU0sR0FBR0EsTUFBTSxHQUFHRCxPQUFPLENBQUNFLENBQUQsQ0FBekI7SUFDRDs7SUFDRCxPQUFPRCxNQUFQO0VBQ0g7O0VBRURJLFdBQVcsQ0FBQ0MsT0FBRCxFQUFVQyxVQUFWLEVBQXNCO0lBQzdCLE9BQU9ELE9BQU8sR0FBR0MsVUFBakI7RUFDSDs7RUFFREMsTUFBTSxDQUFDQyxRQUFELEVBQVdDLE9BQVgsRUFBb0I7SUFDdEIsT0FBT0QsUUFBUSxHQUFHQyxPQUFsQjtFQUNIOztFQUVEQyxjQUFjLENBQUNDLE1BQUQsRUFBUztJQUNuQixPQUFPQSxNQUFNLEdBQUdBLE1BQWhCO0VBQ0g7O0FBM0NhOztBQTRDZjtBQUVEQyxNQUFNLENBQUNDLE9BQVAsR0FBaUI7RUFBQ2pCO0FBQUQsQ0FBakIifQ==","originalCode":"/**\r\n *\r\n *A class containing method for summing and multiplying parameters.\r\n * @class Calculator\r\n */\r\n class Calculator {\r\n    constructor() {\r\n    };\r\n    /**\r\n     *\r\n     *\r\n     * @param {Array<Number>} theArgs array of numbers for summing\r\n     * @return {Number} sum of numbers\r\n     * @memberof Calculator\r\n     */\r\n    add(...theArgs) {\r\n        let result = 0;\r\n        for (let i = 0; i < theArgs.length; i++) {\r\n          result += theArgs[i];\r\n        }\r\n  \r\n        return result;\r\n    };\r\n    /**\r\n     *\r\n     *\r\n     * @param {Array<Number>} theArgs array of numbers for multiplication\r\n     * @return {Number}\r\n     * @memberof Calculator\r\n     */\r\n    multiply(...theArgs) {\r\n        let result = 1;\r\n        for (let i = 0; i < theArgs.length; i++) {\r\n          result = result * theArgs[i];\r\n        }\r\n        return result;\r\n    };\r\n    \r\n    subtraction(reduced, subtrahend) {\r\n        return reduced - subtrahend;\r\n    }\r\n\r\n    divide(dividend, divider) {\r\n        return dividend / divider;\r\n    }\r\n\r\n    exponentiation(number) {\r\n        return number * number;\r\n    }\r\n  };\r\n  \r\n  module.exports = {Calculator};","sourceMapPath":"C:/Users/admin/AppData/Local/Temp/jest/jest-transform-cache-74301cc982ea1a9ff79feb614f923998-e1195690224eeed71261e356dfb2d91d/5f/calculator_5fa4d27f95e1eddcd96ff00394d204b3.map","wrapperLength":82},"result":{"scriptId":"1095","url":"E:\\kurs\\it academy\\it_academy\\lesson15\\calculator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4310,"count":1}],"isBlockCoverage":true},{"functionName":"Object.<anonymous>","ranges":[{"startOffset":23,"endOffset":4307,"count":1}],"isBlockCoverage":true},{"functionName":"Calculator","ranges":[{"startOffset":207,"endOffset":223,"count":1}],"isBlockCoverage":true},{"functionName":"add","ranges":[{"startOffset":383,"endOffset":526,"count":4},{"startOffset":467,"endOffset":502,"count":8}],"isBlockCoverage":true},{"functionName":"multiply","ranges":[{"startOffset":678,"endOffset":834,"count":5},{"startOffset":767,"endOffset":810,"count":10}],"isBlockCoverage":true},{"functionName":"subtraction","ranges":[{"startOffset":838,"endOffset":909,"count":5}],"isBlockCoverage":true},{"functionName":"divide","ranges":[{"startOffset":913,"endOffset":975,"count":3}],"isBlockCoverage":true},{"functionName":"exponentiation","ranges":[{"startOffset":979,"endOffset":1035,"count":4}],"isBlockCoverage":true}]}}]}],"wasInterrupted":false,"config":{"bail":0,"changedFilesWithAncestor":false,"ci":false,"collectCoverage":true,"collectCoverageFrom":[],"coverageDirectory":"E:\\kurs\\it academy\\it_academy\\lesson15\\coverage","coverageProvider":"v8","coverageReporters":["json","text","lcov","clover"],"detectLeaks":false,"detectOpenHandles":false,"errorOnDeprecated":false,"expand":false,"findRelatedTests":false,"forceExit":false,"json":false,"lastCommit":false,"listTests":false,"logHeapUsage":false,"maxConcurrency":5,"maxWorkers":11,"noStackTrace":false,"nonFlagArgs":[],"notify":false,"notifyMode":"failure-change","onlyChanged":false,"onlyFailures":false,"passWithNoTests":false,"projects":[],"reporters":[["E:\\kurs\\it academy\\it_academy\\lesson15\\node_modules\\jest-html-reporters\\index.js",{"publicPath":"./test_report","filename":"report.html","openReport":true}]],"rootDir":"E:\\kurs\\it academy\\it_academy\\lesson15","runTestsByPath":false,"skipFilter":false,"testFailureExitCode":1,"testPathPattern":"","testSequencer":"E:\\kurs\\it academy\\it_academy\\lesson15\\node_modules\\@jest\\test-sequencer\\build\\index.js","updateSnapshot":"new","useStderr":false,"verbose":true,"watch":false,"watchAll":false,"watchman":true,"coverageLinkPath":"..\\coverage\\lcov-report\\index.html"},"endTime":1657401574619,"_reporterOptions":{"publicPath":"./test_report","filename":"report.html","expand":false,"pageTitle":"","hideIcon":false,"testCommand":"npx jest","openReport":true,"failureMessageOnly":0,"enableMergeData":false,"dataMergeLevel":1,"inlineSource":false,"urlForTestFiles":""},"attachInfos":{}})